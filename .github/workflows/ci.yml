name: RGD Module Tests
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Run linting
        run: |
          tox -e lint
  check-migrations-graph:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.2
        env:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:3.9.13-management
        ports:
          - 5672:5672
      minio:
        image: bitnami/minio:2022.3.5-debian-10-r3
        env:
          MINIO_ROOT_USER: minioAccessKey
          MINIO_ROOT_PASSWORD: minioSecretKey
        ports:
          - 9000:9000
    strategy:
      fail-fast: false
      matrix:
        django-version: ["django32", "django40"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install tox
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Install graphviz
        run: |
          sudo apt update
          sudo apt-get install --no-install-recommends --yes graphviz libgraphviz-dev
      - name: Run check migrations
        run: |
          tox -e check-migrations-${{ matrix.django-version }}
        env:
          DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
          DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
          DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
          DJANGO_STORAGE_BUCKET_NAME: django-storage
      - name: Graph models
        if: ${{ matrix.django-version=='django40' }}
        run: |
          tox -e graph-models
        env:
          DJANGO_DATABASE_URL: postgres://postgres:postgres@localhost:5432/django
          DJANGO_MINIO_STORAGE_ENDPOINT: localhost:9000
          DJANGO_MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          DJANGO_MINIO_STORAGE_SECRET_KEY: minioSecretKey
          DJANGO_STORAGE_BUCKET_NAME: django-storage
      - name: Upload model graphs
        uses: actions/upload-artifact@v2
        with:
          name: graphs
          path: .tox/graphs/*.png
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgis/postgis:13-3.2
        env:
          POSTGRES_DB: django
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:3.9.13-management
        ports:
          - 5672:5672
      minio:
        # This image does not require any command arguments (which GitHub Actions don't support)
        image: bitnami/minio:2022.3.5-debian-10-r3
        env:
          MINIO_ROOT_USER: minioAccessKey
          MINIO_ROOT_PASSWORD: minioSecretKey
        ports:
          - 9000:9000
    strategy:
      fail-fast: false
      matrix:
        rgd-module: ["rgd", "rgd-3d", "rgd-fmv", "rgd-geometry", "rgd-imagery"]
        django-version: ["django32", "django40"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.8"
      - name: Install ffmpeg
        if: ${{ matrix.rgd-module=='rgd-fmv' }}
        run: |
          sudo apt update
          sudo apt-get install --no-install-recommends --yes ffmpeg
      - name: Install tox and codecov
        run: |
          pip install --upgrade pip
          pip install tox codecov
      - name: Run RGD module tests
        run: |
          tox -e test-${{ matrix.rgd-module }}-${{ matrix.django-version }}
        env:
          MINIO_STORAGE_ENDPOINT: localhost:9000
          MINIO_STORAGE_ACCESS_KEY: minioAccessKey
          MINIO_STORAGE_SECRET_KEY: minioSecretKey
          CELERY_BROKER_URL: amqp://localhost:5672/
          DATABASE_HOST: localhost
      - name: Stash coverage
        uses: actions/upload-artifact@v2
        with:
          name: .coverage.${{ matrix.rgd-module }}
          path: ${{ matrix.django-version }}-${{ matrix.rgd-module }}/tests/coverage.xml
      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.django-version }}-${{ matrix.rgd-module }}/tests/coverage.xml
          flags: ${{ matrix.rgd-module }}
          verbose: true
